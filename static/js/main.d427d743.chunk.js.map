{"version":3,"sources":["stitches.config.ts","Interactive.tsx","App.tsx","index.tsx"],"names":["styled","css","createStyled","prefix","tokens","colors","$pageBackground","$highContrast","$lowContrast","$green","breakpoints","utils","darkThemeClass","theme","globalStyles","global","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","minHeight","backgroundColor","StyledDarkModeToggle","onClick","className","props","toString","as","hover","active","focusFromTab","style","outline","outlineOffset","touchActiveTapOnly","width","display","outlineColor","StyledInteractiveLink","target","rel","borderBottom","borderBottomStyle","variants","type","lowContrast","borderBottomWidth","StyledInteractiveButton","lineHeight","userSelect","borderColor","AppDiv","maxWidth","H1","justifyContent","marginBottom","P","ColorBlockContainer","App","darkMode","useDarkMode","undefined","classNameDark","setColors","useState","randomRGBColorGenerator","toggle","href","rgbColor","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d427d743.chunk.js","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const { styled, css } = createStyled({\n  prefix: '',\n  tokens: {\n    colors: {\n      $pageBackground: 'rgb(240,240,240)',\n      $highContrast: 'rgb(0,0,0)',\n      $lowContrast: 'rgb(128,128,128)',\n      $green: 'rgb(0,168,0)',\n    },\n  },\n  breakpoints: {},\n  utils: {},\n});\n\nexport const darkThemeClass = css.theme({\n  colors: {\n    $pageBackground: 'rgb(32,32,32)',\n    $highContrast: 'rgb(192,192,192)',\n    $lowContrast: 'rgb(136,136,136)',\n    $green: 'rgb(0,168,0)',\n  },\n});\n\nexport const globalStyles = css.global({\n  'body, div, span, a, p, h1, h2, code': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import Interactive from 'react-interactive';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\ninterface DarkModeToggleProps {\n  onClick: () => void;\n  className?: any;\n}\nconst DarkModeToggle: React.VFC<DarkModeToggleProps> = ({\n  onClick,\n  className,\n  ...props\n}) => {\n  return (\n    <Interactive\n      {...props}\n      className={className.toString()}\n      onClick={onClick}\n      as=\"span\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Interactive>\n  );\n};\n\nexport const StyledDarkModeToggle = styled(DarkModeToggle, {\n  color: '$highContrast',\n  width: '30px',\n  height: '30px',\n  display: 'inline-block',\n\n  '&.hover': {\n    color: '$green',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  children: React.ReactNode;\n  href: string;\n  className?: any;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = (props) => {\n  return (\n    <Interactive\n      {...props}\n      className={props.className.toString()}\n      as=\"a\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    />\n  );\n};\n\nexport const StyledInteractiveLink = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '2px dotted $green',\n  textDecoration: 'none',\n\n  '&.hover': {\n    borderBottomStyle: 'solid',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        borderBottomWidth: '1px',\n\n        '&.hover': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\ninterface InteractiveButtonProps {\n  children: React.ReactNode;\n  onClick: () => void;\n  className?: any;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = (props) => {\n  return (\n    <Interactive\n      {...props}\n      className={props.className.toString()}\n      as=\"div\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n    />\n  );\n};\n\nexport const StyledInteractiveButton = styled(InteractiveButton, {\n  color: '$highContrast',\n  border: '2px solid $highContrast',\n  width: '100%',\n  height: '42px',\n  lineHeight: '36px',\n  fontSize: '18px',\n  textAlign: 'center',\n  margin: '25px 0',\n  userSelect: 'none',\n\n  '&.hover': {\n    color: '$green',\n    borderColor: '$green',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n","import { useState } from 'react';\nimport { randomRGBColorGenerator, ColorBlock } from 'rollpkg-example-package';\nimport useDarkMode from 'use-dark-mode';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport {\n  StyledInteractiveLink,\n  StyledDarkModeToggle,\n  StyledInteractiveButton,\n} from './Interactive';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nconst ColorBlockContainer = styled('div', {\n  margin: '30px 0',\n});\n\nexport const App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  const [colors, setColors] = useState(() => [\n    randomRGBColorGenerator(),\n    randomRGBColorGenerator(),\n  ]);\n\n  return (\n    <AppDiv>\n      <H1>\n        <span>Rollpkg Example Package</span>\n        <StyledDarkModeToggle onClick={darkMode.toggle} />\n      </H1>\n      <StyledInteractiveLink\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/rollpkg-example-package\"\n      >\n        https://github.com/rafgraph/rollpkg-example-package\n      </StyledInteractiveLink>\n      <P>\n        This is the demo site for the Rollpkg Example Package.{' '}\n        <StyledInteractiveLink href=\"https://github.com/rafgraph/rollpkg\">\n          Rollpkg\n        </StyledInteractiveLink>{' '}\n        is a zero config way to create packages with Rollup and TypeScript.\n      </P>\n\n      <P>\n        The example package contains a random color generator, which is\n        demonstrated here.\n      </P>\n\n      <StyledInteractiveButton\n        onClick={() =>\n          setColors([randomRGBColorGenerator(), randomRGBColorGenerator()])\n        }\n      >\n        Generate new random colors\n      </StyledInteractiveButton>\n\n      <ColorBlockContainer>\n        <ColorBlock width=\"100%\" height=\"200px\" rgbColor={colors[0]} />\n        <div>RGB {colors[0].join(', ')}</div>\n      </ColorBlockContainer>\n      <ColorBlockContainer>\n        <ColorBlock width=\"100%\" height=\"200px\" rgbColor={colors[1]} />\n        <div>RGB {colors[1].join(', ')}</div>\n      </ColorBlockContainer>\n    </AppDiv>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}