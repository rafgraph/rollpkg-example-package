{"version":3,"sources":["stitches.config.ts","Interactive.tsx","App.tsx","index.tsx"],"names":["styled","theme","global","stitchesGlobal","createCss","colors","pageBackground","highContrast","lowContrast","green","darkThemeClass","globalStyles","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","minHeight","backgroundColor","DarkModeButton","onClick","className","as","width","outline","outlineOffset","Link","href","children","target","rel","borderBottom","borderBottomStyle","variants","type","Button","lineHeight","userSelect","borderColor","AppDiv","maxWidth","H1","display","justifyContent","marginBottom","P","ColorBlockContainer","App","darkMode","useDarkMode","undefined","classNameDark","setColors","useState","randomRGBColorGenerator","toggle","rgbColor","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1238d53e.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, theme, global: stitchesGlobal } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      green: 'rgb(0,168,0)',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    green: 'rgb(0,168,0)',\n  },\n});\n\nexport const globalStyles = stitchesGlobal({\n  'button, input': {\n    all: 'unset',\n  },\n  'body, div, span, a, p, h1, h2, code': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: 'monospace',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { Interactive } from 'react-interactive';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\ninterface InteractiveDarkModeButtonProps {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n}\nconst InteractiveDarkModeButton: React.VFC<InteractiveDarkModeButtonProps> = ({\n  onClick,\n  className,\n}) => {\n  return (\n    <Interactive as=\"button\" className={className} onClick={onClick}>\n      <SunIcon width=\"30\" height=\"30\" />\n    </Interactive>\n  );\n};\n\nexport const DarkModeButton = styled(InteractiveDarkModeButton, {\n  color: '$highContrast',\n  width: '30px',\n  height: '30px',\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  href: string;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = ({\n  href,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive\n      as=\"a\"\n      href={href}\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </Interactive>\n  );\n};\n\nexport const Link = styled(InteractiveLink, {\n  color: '$highContrast',\n  borderBottom: '1px dotted $colors$green',\n  textDecoration: 'none',\n  '&.hover, &.active': {\n    borderBottomStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n  variants: {\n    type: {\n      lowContrast: {\n        color: '$lowContrast',\n        fontSize: '14px',\n        '&.hover, &.active': {\n          color: '$highContrast',\n        },\n      },\n    },\n  },\n});\n\ninterface InteractiveButtonProps {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  children: React.ReactNode;\n}\nconst InteractiveButton: React.VFC<InteractiveButtonProps> = ({\n  onClick,\n  className,\n  children,\n}) => {\n  return (\n    <Interactive as=\"button\" className={className} onClick={onClick}>\n      {children}\n    </Interactive>\n  );\n};\n\nexport const Button = styled(InteractiveButton, {\n  color: '$highContrast',\n  border: '2px solid $colors$highContrast',\n  width: '100%',\n  height: '42px',\n  lineHeight: '36px',\n  fontSize: '18px',\n  textAlign: 'center',\n  margin: '25px 0',\n  userSelect: 'none',\n  '&.hover, &.active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '2px',\n  },\n});\n","import { useState } from 'react';\nimport { randomRGBColorGenerator, ColorBlock } from 'rollpkg-example-package';\nimport useDarkMode from 'use-dark-mode';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport { Link, DarkModeButton, Button } from './Interactive';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst P = styled('p', {\n  margin: '12px 0',\n});\n\nconst ColorBlockContainer = styled('div', {\n  margin: '30px 0',\n});\n\nexport const App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  const [colors, setColors] = useState(() => [\n    randomRGBColorGenerator(),\n    randomRGBColorGenerator(),\n  ]);\n\n  return (\n    <AppDiv>\n      <H1>\n        <span>Rollpkg Example Package</span>\n        <DarkModeButton onClick={darkMode.toggle} />\n      </H1>\n      <Link\n        type=\"lowContrast\"\n        href=\"https://github.com/rafgraph/rollpkg-example-package\"\n      >\n        https://github.com/rafgraph/rollpkg-example-package\n      </Link>\n      <P>\n        This is the demo site for the Rollpkg Example Package.{' '}\n        <Link href=\"https://github.com/rafgraph/rollpkg\">Rollpkg</Link> is a\n        zero config way to create packages with Rollup and TypeScript.\n      </P>\n\n      <P>\n        The example package contains a random color generator, which is\n        demonstrated here.\n      </P>\n\n      <Button\n        onClick={() =>\n          setColors([randomRGBColorGenerator(), randomRGBColorGenerator()])\n        }\n      >\n        Generate new random colors\n      </Button>\n\n      <ColorBlockContainer>\n        <ColorBlock width=\"100%\" height=\"200px\" rgbColor={colors[0]} />\n        <div>RGB {colors[0].join(', ')}</div>\n      </ColorBlockContainer>\n      <ColorBlockContainer>\n        <ColorBlock width=\"100%\" height=\"200px\" rgbColor={colors[1]} />\n        <div>RGB {colors[1].join(', ')}</div>\n      </ColorBlockContainer>\n    </AppDiv>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}